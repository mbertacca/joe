/*
          ooo
   oo    ooo
    oo  ooo
v e r y a n t
      ooo

http://www.veryant.com

 (C) 2016
 ________________
/  _   _   ____  \
| | | | | |  __| |
| | |_| | | |__  |
| |     | |____| |
\_|     |________/
Marco   Bertacca
*/

package com.veryant.joe;
import java.util.HashMap;

public class Data {
   public static final String rcsid = "$Id$";
   public final Data parent;
   final HashMap<String,Object> constants;
   final HashMap<String,Object> variables = new HashMap<String,Object>();

   public Data () {
      parent = null;
      constants = new HashMap<String,Object>();
   }
   public Data (Data par) {
      parent = par;
      constants = parent.constants;
   }
   public Object setConstant (String name, Object val) {
      if (constants.get (name) == null) {
         constants.put (name, val);
         return val;
      } else
         return null;
   }
   private HashMap<String,Object> getDataWith (String name) {
      if (variables.get(name) != null)
         return variables;
      else if (parent != null)
         return parent.getDataWith(name);
      else
         return null;
   }
   public Object setLocal (String name, Object val) {
      variables.put (name, val);
      return val;
   }
   public Object setVariable (String name, Object val) {
      if (constants.get (name) == null) {
         HashMap<String,Object> var = getDataWith (name);
         if (var == null)
            variables.put (name, val);
         else
            var.put (name, val);
         return val;
      } else
         return null;
   }
   public Object getVariable (String name) {
      Object Return = variables.get (name);
      if (Return == null) {
         Return = constants.get (name);
         if (Return == null && parent != null)
            Return = parent.getVariable(name);
      }
      return Return;
   }
   public Object getInteger (String val) {
      return Wrapper.newInstance (Integer.parseInt(val));
   }
   public Object getDecimal (String val) {
      return Wrapper.newInstance (Double.parseDouble(val));
   }
   public Object getString (String val) {
      return Wrapper.newInstance (val);
   }
}
