:args.
logo := !newInstance "Logo".
logo setTitle (args get 0).
dim := 124.

hilbert := {hilbert:level,angle,size.
  !if (level > 0),{
      level := level - 1.
      cc := logo getpencolor.
      red := cc getRed.
      green := cc getGreen.
      blue := cc getBlue.
      inc := 32.
      !switch (logo random 6 intValue)
      case 0,{
         red := red - inc.
         !if (red < 0),{
            red := red * -1.
         }.
      }
      case 1,{
         red := red + inc.
         !if (red > 255),{
            red := 511 - red.
         }.
      }
      case 2,{
         green := green - inc.
         !if (green < 0),{
            green := green * -1.
         }.
      }
      case 3,{
         green := green + inc.
         !if (green > 255),{
            green := 511 - green.
         }.
      }
      case 4 ,{
         blue := blue - inc.
         !if (blue < 0),{
            blue := blue * -1.
         }.
      }
      case 5,{
         blue := blue + inc % 256.
         !if (blue > 255),{
            blue := 511 - blue.
         }.
      }.

      logo right angle.
      logo setpencolor red,green,blue.
      !!hilbert level, (angle * -1), size.
      logo setpencolor red,green,blue
           forward size
           left angle.
      !!hilbert level, angle, size.
      logo setpencolor red,green,blue
           forward size.
      !!hilbert level, angle, size.
      logo setpencolor red,green,blue
           left angle
           forward size.
      !!hilbert level, (angle * -1), size.
      logo right angle.
  }.
}.

draw := {:size.
  logo left 90.
  !!hilbert 8,90,1.
  logo home.
}.

cpTriangle := {:len.
   start := logo pos.
   rpt := len * 0.866 + 1 intValue.
   return := !newArray rpt.

   logo repeat rpt,{:repcount.
      here := logo pos.

      elem := !newArray (len + 1 intValue).
      logo penup.
      logo repeat ((len + 1) intValue),{:repcount1.
         elem set (repcount1 - 1),(logo colorunder).
         logo forward 1.
      }.
      return set (repcount - 1),elem.

      logo penup ;
           setxy (here get 0),(here get 1)
           left 90
           forward 1
           right 90
           forward 0.577
           pendown ;
      .
      len := len - 1.154.
   }.
   logo setxy (start get 0), (start get 1).
   return.
}.

showTriangle := {:treq,refl.
   start := logo pos.
   rpt := treq length.
   logo repeat rpt,{:repcount.
      here := logo pos.
      elem := treq get (repcount - 1).
      len := elem length.
      logo pendown.
      !if (refl = 0),{
         logo repeat len,{:repcount1.
            logo setpencolor (elem get (repcount1 - 1))
                 forward 1.
         }.
      },{
         logo repeat len,{:repcount1.
            logo setpencolor (elem get (len - repcount1))
                 forward 1.
         }.
      }.
      logo penup ;
           setxy (here get 0),(here get 1)
           left 90
           forward 1
           right 90
           forward 0.577
      .
   }.
   logo setxy (start get 0), (start get 1).
}.

showRotTriangle := {:treq,len,rot,refl.
   !switch rot
   case 0,{
      !!showTriangle treq,refl.
   }
   case 2,{
      logo penup ; forward len left 120.
      !!showTriangle treq,refl.
      logo penup ; right 120 back len.
   }
   case 1,{
      logo penup ; left 60 forward len left 180.
      !!showTriangle treq,refl.
      logo penup ; left 180 back len right 60.
   }.
}.

logo forever {
   logo clearscreen ;
        setbackground 0,0,0
        setpencolor (logo random 256 intValue),
                    (logo random 256 intValue),
                    (logo random 256 intValue).

   !! draw (dim).

   triangle := !!cpTriangle dim.
   logo clearscreen ; setbackground 0,0,0 penup; setxy 320,-240 setpensize 2.
   cnt := 2.
   logo repeat 3,{
      cnt := 0.
      logo repeat 4, {:repcount.
         cnt := cnt + 1.
         !!showRotTriangle triangle,dim,(cnt % 3),0.
         logo forward dim.
      }.
      logo left 60 penup ; forward dim left 120 pendown.
      cnt := cnt + 1.
      logo repeat 5, {:repcount.
         cnt := cnt + 1.
         !!showRotTriangle triangle,dim,(cnt % 3),1.
         logo forward dim.
      }.
      logo left 180 .
      logo repeat 5, {:repcount.
         cnt := cnt + 1.
         !!showRotTriangle triangle,dim,(cnt % 3),0.
         logo forward dim.
      }.
      logo left 120 penup ; forward dim left 60 pendown.
      cnt := cnt + 1.

      logo repeat 4, {:repcount.
         cnt := cnt + 1.
         !!showRotTriangle triangle,dim,(cnt % 3),1.
         logo forward dim.
      }.
      logo left 180 .
   }.

   logo setDelay 5000 forward 0 setDelay 0.
}.
