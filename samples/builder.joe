self := !!.
executedBlocks := !newInstance "java.util.HashSet".
true := 1 = 1.
false := true not.
SystemCommand := !newArray 3.
SystemClass := !getClassRef "java.lang.System".
Paths := !getClassRef "java.nio.file.Paths".
Files := !getClassRef "java.nio.file.Files".
CopyOption := !getStaticField "java.nio.file.StandardCopyOption",
                              "REPLACE_EXISTING".
system := system.
pathSep := pathSep.

!if ((SystemClass getProperty "os.name") startsWith "Windows"),{
   pathSep := { ";" }.
   system := {:cmd.
      !println cmd.
      !exec "cmd","/c",cmd.
   }.
},{
   pathSep := { ":" }.
   system := {:cmd.
      !println cmd.
      !exec "sh","-c",cmd.
   }.
}.

_file := {:aPath.
  thisFile := !newInstance "java.io.File",aPath.

   olderThan := {:aFile.
      !if (thisFile lastModified; <
           (!newInstance "java.io.File",aFile lastModified)),{
         true.
      },{
         false.
      }.
   }.
   olderThanAny := {exit:aDir,aExt.
      thisLm := thisFile lastModified.
      list := !newInstance "java.io.File",aDir list.
      !foreach list, {:item.
         !if (item endsWith aExt),{
            lm := !newInstance "java.io.File",aDir,item lastModified.
            !if (thisLm < lm), {
               true.
               !break "exit".
             }.
         }.
      }.
      false.
   }.
   delete := {
      thisFile delete.
   }.
   toString := {
      thisFile getPath.
   }.
}.

copy := {:from,to.
   Files copy (Paths get from,""), (Paths get to,""), CopyOption.
}.

file := {:path.
   _file new path.
}.

depends := {:block.
   !if (executedBlocks contains block not),{
       executedBlocks add block.
       block exec.
   }.
   self.
}.

moreRecent := {:a,b.
   lmA := !newInstance "java.io.File",a lastModified.
   lmB := !newInstance "java.io.File",b lastModified.
   lmB - lmA.
}.

anythingNew := {exit:srcDir,srcExt,exeDir,exeExt.
   srcExtLen := srcExt length.
   fDir := !newInstance "java.io.File",srcDir.
   list := fDir list.

   !foreach list,{:src.
      !if (src endsWith srcExt),{
         exe := src substring 0,(src length; - srcExtLen) + exeExt.
         !if (moreRecent exec (srcDir+"/"+src),(exeDir+"/"+exe) < 0), {
            true.
            !break "exit".
         }.
      }.
   }.
   false.
}.
