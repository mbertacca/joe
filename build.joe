/*
 * JOE Build script
 * It requires Java 7 or newer.
 * Note that Windows doesn't allow you to rewrite the jar you are using.
 */
:args.

build := !new "samples/builder.joe".
pathSep := build pathSep.

compileJoe := {
   dir := "src/com/veryant/joe".

   !if (build anythingNew dir,".java",dir,".class"), {
      rc := build system ("javac -g -cp src "+dir+"/*.java").
      !if (rc <> 0), {
         !throw "Compilation failed!".
      }.
   }.
}.

@compileJoe := {
   build depends compileJoe.
}.

makeJoeJar := {
   build depends compileJoe.
   thisJar := build file "jar/joe.jar".

   !if (thisJar olderThanAny "src/com/veryant/joe",".class"),{
      thisJar delete.
      rc := build system ("jar cvfm "+thisJar+" jar/Manifest.txt -C src dummy"
                        + " src/com/veryant/joe/*.class").
   }.
}.

@makeJoeJar := {
   build depends makeJoeJar.
}.

compileIn := {:dir.
   build depends makeJoeJar.
   !if (build anythingNew dir,".java",dir,".class"), {
      rc := build system ("javac -g -cp ""jar/joe.jar"+pathSep+dir+""" "+dir+"/*.java").
      !if (rc <> 0), {
         !throw ("Compilation in "+ dir + " failed!").
      }.
   }.
}.

compileLogo := {
   compileIn exec "samples/logojoe".
}.

compileForm := {
   compileIn exec "samples/form".
}.

makeLogoJar := {
   build depends makeJoeJar
         depends compileLogo.

   thisJar := build file "samples/logojoe/logojoe.jar".

   !if ( thisJar olderThan "jar/joe.jar" or (thisJar olderThanAny "samples/logojoe",".class")),{
      build copy "jar/joe.jar", (thisJar toString).
      rc := build system ("jar uvf " + thisJar + " -C samples/logojoe dummy samples/logojoe/Logo*.class samples/logojoe/joe.png").
   }.
}.

@makeLogoJar := {
 build depends makeLogoJar.
}.

makeFormJar := {
   build depends makeJoeJar
         depends compileForm.

   thisJar := build file "samples/form/formjoe.jar".

   !if ( thisJar olderThan "jar/joe.jar" or
        (thisJar olderThanAny "samples/form",".class")),{
      build copy "jar/joe.jar",(thisJar toString).
      rc := build system ("jar uvf " + thisJar +" -C samples/form dummy samples/form/*.class samples/form/joe.png").
   }.
}.

@makeFormJar := {
 build depends makeFormJar.
}.

@all := {
   !foreach (!! getVariablesNames), {:tag.
      !if (tag startsWith "@" and (tag <> "@all")),{
         !println "executing: ",tag.
         !! getVariable tag exec.
      }.
   }.
}.

help := {
   !println "Available tags:".
   !foreach (!! getVariablesNames), {:tag.
      !if (tag startsWith "@"),{
         !println "   ",tag.
      }.
   }
}.

toExec := null.

!if ((args length) > 1),{
   toExec := !!getVariable (args get 1).
   !if (!isNull toExec),{
       !println "Tag ",(args get 1), " is not present!".
       help exec.
       !systemExit 2.
   }.
}.

!if (!isNull toExec),{
   help exec.
},{
   toExec exec.
}.
